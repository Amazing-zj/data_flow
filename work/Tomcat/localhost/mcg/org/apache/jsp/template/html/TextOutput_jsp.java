/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.99
 * Generated at: 2019-12-23 06:55:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.template.html;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class TextOutput_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script language=\"javascript\">\r\n");
      out.write("    // var delCount = [];\r\n");
      out.write("    // var increase = [];\r\n");
      out.write("    $(document).ready(function () {\r\n");
      out.write("            var id = $(\"#id\").attr(\"name\").substr(0,18);\r\n");
      out.write("            var cons = OutputMap.get(id);\r\n");
      out.write("            var exist = [];\r\n");
      out.write("            if(cons == undefined){\r\n");
      out.write("                InputCount.remove(id);\r\n");
      out.write("            }else {\r\n");
      out.write("                var nList = cons.getName();\r\n");
      out.write("                var tList = cons.getType();\r\n");
      out.write("                var count = [];\r\n");
      out.write("                for (var i = 1; i <= nList.length; i++) {\r\n");
      out.write("                    var name = id + \"_Name_\" + i;\r\n");
      out.write("                    var type = id + \"_Type_\" + i;\r\n");
      out.write("                    var divNode = \"<div id = '\" + id + \"_\" + i + \"'><input type = 'text' id = '\" + type + \"' value ='\" + tList[i-1] + \"'><input type ='text' id = '\" + name + \"'value = '\" + nList[i-1] + \"'/><button onclick='del(\" + i + \")'>X</button><div>\";\r\n");
      out.write("                    $(\"#addItemGroup\").append(divNode);\r\n");
      out.write("                    count.push(i);\r\n");
      out.write("                    exist.push()\r\n");
      out.write("                }\r\n");
      out.write("                InputCount.put(id, count);\r\n");
      out.write("            }\r\n");
      out.write("            $(\"#addItem\").bind(\"click\", function () {\r\n");
      out.write("                var count = InputCount.get(id);\r\n");
      out.write("                if (count == undefined) {\r\n");
      out.write("                    count = [];\r\n");
      out.write("                    count.push(1);\r\n");
      out.write("                }else{\r\n");
      out.write("                    count.push(count.length+1);\r\n");
      out.write("                    for(var i = 1; i< count.length;i++ )\r\n");
      out.write("                        if(count.indexOf(i) == -1){\r\n");
      out.write("                            count.splice(count.length-1,1);\r\n");
      out.write("                            count.push(i);\r\n");
      out.write("                            break;\r\n");
      out.write("                        }\r\n");
      out.write("                }\r\n");
      out.write("                InputCount.put(id,count);\r\n");
      out.write("                var index = count[count.length-1];\r\n");
      out.write("                var name = id + \"_Name_\" + index;\r\n");
      out.write("                var type = id + \"_Type_\" + index;\r\n");
      out.write("                var divNode = \"<div id = '\"+id+\"_\"+index +\"'><input type = 'text' id = '\"+ type +\"'><input type ='text' id = '\" + name + \"'/><button onclick='del(\"+index +\")'>X</button><div>\";\r\n");
      out.write("                $(\"#addItemGroup\").append(divNode);\r\n");
      out.write("            });\r\n");
      out.write("            $(\"#deleteItem\").bind(\"click\", function () {\r\n");
      out.write("                $(\"#addItemGroup\").children().each(function () {\r\n");
      out.write("                    $(this).remove();\r\n");
      out.write("                });\r\n");
      out.write("                InputCount.put(id, count);\r\n");
      out.write("            });\r\n");
      out.write("            $(\"#save\").bind(\"click\",function () {\r\n");
      out.write("                var tList = [];\r\n");
      out.write("                var nList = [];\r\n");
      out.write("                var count = InputCount.get(id);\r\n");
      out.write("                if(count == undefined){\r\n");
      out.write("                    alert(\"output data lacking\");\r\n");
      out.write("                    deleteInput(id);\r\n");
      out.write("                    return ;\r\n");
      out.write("                }\r\n");
      out.write("                for(var i = 0 ; i < count.length ; i++){\r\n");
      out.write("                    nList.push($(\"#\"+id+\"_Name_\"+count[i]).val());\r\n");
      out.write("                    tList.push($(\"#\"+id+\"_Type_\"+count[i]).val());\r\n");
      out.write("                }\r\n");
      out.write("                cons = new InputData();\r\n");
      out.write("                var result = cons.add(nList,tList);\r\n");
      out.write("                if(result == 1){\r\n");
      out.write("                    alert(\"can exist blank input\");\r\n");
      out.write("                }else if (result == 2){\r\n");
      out.write("                    alert(\"name repeated\");\r\n");
      out.write("                }else if( result == 0){\r\n");
      out.write("                    acquireOutput(id, cons);\r\n");
      out.write("                    OutputMap.put(id,cons);\r\n");
      out.write("                    initInputMap(id,cons);\r\n");
      out.write("                }else{\r\n");
      out.write("                    alert(\"error\");\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            })\r\n");
      out.write("    }\r\n");
      out.write("    );\r\n");
      out.write("\r\n");
      out.write("    function del(e){\r\n");
      out.write("        var id = $(\"#id\").attr(\"name\").substr(0,18);\r\n");
      out.write("        var count = InputCount.get(id);\r\n");
      out.write("        var index = count.indexOf(e);\r\n");
      out.write("        if(index == -1){\r\n");
      out.write("            alert(\"don't call del function by using console !!!\");\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        // delCount.push(new ParamData(id,$(\"#\" +id+ \"_Name_\" +e ).val(),$(\"#\" + id + \"_Type_\" +e).val()));\r\n");
      out.write("        $(\"#\"+id+\"_\"+e).remove();\r\n");
      out.write("        count.splice(index,1);\r\n");
      out.write("        InputCount.put(id,count);\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("<div id = \"id\" name=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${modalId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\" style=\"display: none\"></div>\r\n");
      out.write("<div class=\"container-fluid\" >\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <div class=\"col-md-12\">\r\n");
      out.write("            <ul class=\"nav nav-tabs\" role=\"tablist\">\r\n");
      out.write("                <li role=\"presentation\" class=\"active\"><a href=\"#");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${modalId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("_textProperty\" data-toggle=\"tab\">输出</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"row margin_top\">\r\n");
      out.write("        <div class=\"col-md-12\">\r\n");
      out.write("            <form id=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${modalId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("_textForm\" class=\"form-horizontal\" role=\"form\">\r\n");
      out.write("                <div class=\"form-body\">\r\n");
      out.write("                    <div id=\"myTabContent\" class=\"tab-content\">\r\n");
      out.write("                        <div class=\"tab-pane fade in active\" id=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${modalId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("_textProperty\">\r\n");
      out.write("                            <div class=\"form-group\">\r\n");
      out.write("                                <label class=\"col-sm-2 control-label\">控件名称</label>\r\n");
      out.write("                                <div class=\"col-sm-4\">\r\n");
      out.write("                                    <div class=\"fg-line\">\r\n");
      out.write("                                        <input type=\"text\" id=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${modalId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("_name\"  class=\"form-control\" />\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("\r\n");
      out.write("                                <label class=\"col-sm-1 control-label\">控件key</label>\r\n");
      out.write("                                <div class=\"col-sm-4\">\r\n");
      out.write("                                    <div class=\"fg-line\">\r\n");
      out.write("                                        <input type=\"text\" id=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${modalId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("_key\"  class=\"form-control\"  />\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"form-group\">\r\n");
      out.write("                                <label name = \"dataType\" class=\"col-sm-2 control-label\" style=\"text-align: center\">data type</label>\r\n");
      out.write("                                <label name = \"dataName\" class=\"col-sm-2 control-label\" style=\"text-align: center\">data name</label>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div id =\"addItemGroup\">\r\n");
      out.write("    </div>\r\n");
      out.write("    <div>\r\n");
      out.write("        <button id = \"addItem\">Add</button>\r\n");
      out.write("        <button id = \"deleteItem\">Delete</button>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div>\r\n");
      out.write("        <button id = \"save\" >确定</button>\r\n");
      out.write("        <button id = \"cancel\">取消</button>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
